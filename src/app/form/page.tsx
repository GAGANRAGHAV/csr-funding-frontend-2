"use client"

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/ElBUDT7Rd8b
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import {
  Card,
  CardHeader,
  CardTitle,
  CardDescription,
  CardContent,
  CardFooter,
} from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import {
  Select,
  SelectTrigger,
  SelectValue,
  SelectContent,
  SelectItem,
} from "@/components/ui/select";
import { Button } from "@/components/ui/button";
import axios from "axios";
import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";

export default function projectform() {

    const [name, setName] = useState('');
    const [description, setdescription] = useState('');
    const [moneyrequired, setmoneyrequired] = useState(0);
    const [image, setImages] = useState('');
    const [ngo,setngo] = useState('');

    useEffect(() => {

        const savedToken = localStorage.getItem('ngoname');
        if (savedToken) {
          setngo(savedToken);
        }

      }, []);
  

  const router = useRouter();

  
  const handleCreate = async () => {
    try {
      const payload = {
        name,
        description,
        ngo,
        moneyrequired,
        image,
      };

      const response = await axios.post('http://localhost:5000/api/createproject', payload);
      // router.push('/');
      console.log(payload);
    } catch (err) {
      console.log(err);
    }
  };

  const handleImageUpload = (e:any) => {
    const file = e.target.files[0];
    
    if (file) {
      const reader = new FileReader();
      
      reader.onload = () => {
        const result = reader.result;
        if (typeof result === 'string') {
          setImages(result);
        }
      };
      
      reader.onerror = (error) => {
        console.error('Error reading file:', error);
      };
      
      reader.readAsDataURL(file);
    }
  };

  return (
    <Card className="w-full max-w-2xl mx-auto">
      <CardHeader>
        <CardTitle>Post a New Project</CardTitle>
        <CardDescription>
          Share details about your organization's latest initiative.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <form className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="space-y-4">
            <div>
              <Label htmlFor="name">Project Name</Label>
              <Input id="name" placeholder="Rebuild the community center" onChange={(e) => setName(e.target.value)}/>
            </div>
            <div>
              <Label htmlFor="description">Description</Label>
              <Textarea
                id="description"
                rows={4}
                placeholder="Provide details about the project..."
                onChange={(e) => setdescription(e.target.value)}
              />
            </div>
            <div>
              <Label htmlFor="location">Location</Label>
              <Input id="location" placeholder="123 Main St, Anytown USA" />
            </div>
          </div>
          <div className="space-y-4">
            <div>
              <Label htmlFor="funding">Required Funding</Label>
              <Input id="funding" type="number" placeholder="50000"  onChange={(e) => setmoneyrequired(e.target.value)} />
            </div>
            <div>
              <Label htmlFor="status">Project Status</Label>
              <Select id="status">
                <SelectTrigger>
                  <SelectValue placeholder="Select status" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="planning">Planning</SelectItem>
                  <SelectItem value="fundraising">Fundraising</SelectItem>
                  <SelectItem value="inProgress">In Progress</SelectItem>
                  <SelectItem value="completed">Completed</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <div>
              <Label htmlFor="image">Project Image</Label>
              <Input id="image" type="file"  onChange={handleImageUpload}/>
            </div>
          </div>
        </form>
      </CardContent>
      <CardFooter className="flex justify-end">
        <Button type="submit" onClick={handleCreate}>Post Project</Button>
      </CardFooter>
    </Card>
  );
}
